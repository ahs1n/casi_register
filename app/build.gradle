apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        dataBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "edu.aku.hassannaqvi.casi_register"
            minSdkVersion 21
            targetSdkVersion 30
            versionCode code
            versionName "1.39"
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            resValue("string", "DB_PASSWORD_casi_register.db", "VaLu@b1ePeRcE!V3")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.0.1')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    // ShowCaseView
    implementation 'androidx.core:core-ktx:1.3.2'

    //GSON
    implementation 'com.google.code.gson:gson:2.9.1'

    //Ali mask
    implementation 'com.github.AliAzaz:Edittext-Library:2.0.0'
    implementation 'com.github.AliAzaz:AndroidValidatorCrawler:1.0.3'

    //Date
    implementation 'com.github.BlackBoxVision:datetimepicker-edittext:v0.4.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.0'

    // WorkManager
    def work_version = '2.5.0'
    implementation "androidx.work:work-runtime:$work_version"// WorkManager (Java only)
    implementation "androidx.work:work-runtime-ktx:$work_version" // WorkManager (Kotlin + coroutines)

    //Coroutine
    def coroutines_version = '1.4.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    //ViewModel
    def androidx_lifecycle_version = '2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    testImplementation 'android.arch.core:core-testing:1.1.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //MultiStateView
    implementation  'com.github.Kennyc1012:MultiStateView:2.1.2'

    //SDP
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'

    //Permissions
    implementation 'com.nabinbhandari.android:permissions:3.8'

    //Float Button
    implementation 'com.github.leinardi:FloatingActionButtonSpeedDial:3.1.1'

    // ShowCaseView
    implementation 'com.github.amlcurran.showcaseview:library:5.4.3'

    //Image Compressor
    implementation 'id.zelory:compressor:2.1.0'

    //Apache
    api 'org.apache.commons:commons-lang3:3.12.0'

    //RxJava
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation "io.reactivex.rxjava3:rxjava:3.0.6"
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'

    //Fragment
    def fragment_version = '1.3.0'
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    //Cat loading bar for saving ZScore
    implementation 'com.roger.catloadinglibrary:catloadinglibrary:1.0.9'

    // Android Database Browser
    debugImplementation 'com.amitshekhar.android:debug-db-encrypt:1.0.6'

    // Themed Toggle Button Group
//    implementation 'nl.bryanderidder:themed-toggle-button-group:1.4.1'
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.20'

}